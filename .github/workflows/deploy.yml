name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Restore dependencies
        run: dotnet restore NewsFlow/NewsFlow.csproj

      - name: Build
        run: dotnet build NewsFlow/NewsFlow.csproj --configuration Release --no-restore

      - name: Publish
        run: dotnet publish NewsFlow/NewsFlow.csproj -c Release -o publish

      - name: Create appsettings.json with API key from secrets
        env:
          NEWS_API_KEY: ${{ secrets.NEWS_API_KEY }}
        run: |
          cat > publish/wwwroot/appsettings.json << 'EOF'
          {
            "ApiKeys": {
              "NewsAPIKey": "$NEWS_API_KEY"
            },
            "Logging": {
              "LogLevel": {
                "Default": "Information",
                "Microsoft.AspNetCore": "Warning"
              }
            }
          }
          EOF
          # Replace placeholder with actual value
          sed -i "s/\$NEWS_API_KEY/${NEWS_API_KEY}/g" publish/wwwroot/appsettings.json

      - name: Remove appsettings.json from service-worker-assets.js
        run: |
          if [ -f publish/wwwroot/service-worker-assets.js ]; then
            echo "Removing appsettings.json from service-worker-assets.js"
            # Remove appsettings.json entry from the assets array
            sed -i '/appsettings\.json/d' publish/wwwroot/service-worker-assets.js
          fi

      - name: Change base href in index.html
        run: sed -i 's/<base href="\/" \/>/<base href="\/NewsFlow\/" \/>/g' publish/wwwroot/index.html

      - name: Change base path in service-worker files
        run: |
          # List files for debugging
          echo "Files in publish/wwwroot:"
          ls -la publish/wwwroot/ | grep service-worker || echo "No service-worker files found"

          # Update service-worker files if they exist
          if [ -f publish/wwwroot/service-worker.published.js ]; then
            echo "Updating service-worker.published.js"
            sed -i 's/const base = "\/";/const base = "\/NewsFlow\/";/g' publish/wwwroot/service-worker.published.js
          fi
          if [ -f publish/wwwroot/service-worker.js ]; then
            echo "Updating service-worker.js"
            sed -i 's/const base = "\/";/const base = "\/NewsFlow\/";/g' publish/wwwroot/service-worker.js
          fi

      - name: Add .nojekyll file
        run: touch publish/wwwroot/.nojekyll

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: publish/wwwroot

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
